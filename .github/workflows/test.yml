name: Test
on:
  push:
    branches:
      - main
      - release/**

  pull_request:
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - 'test-server/**'
      - 'Samples/**'
      - '.github/workflows/test.yml'
      - 'fastlane/**'
      - 'scripts/tests-with-thread-sanitizer.sh'
      - 'scripts/ci-select-xcode.sh'
      - 'scripts/xcode-test.sh'

      # run the workflow any time an Xcode scheme changes for any tested target
      - 'Sentry.xcodeproj/xcshareddata/xcschemes/Sentry.xcscheme'
      - 'Samples/tvOS-Swift/tvOS-Swift.xcodeproj/xcshareddata/xcschemes/tvOS-Swift.xcscheme'
      - 'Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS13-Swift.xcscheme'
      - 'Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS-SwiftUITests.xcscheme'
      - 'Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS-Swift.xcscheme'
      - 'Samples/macOS-Swift/macOS-Swift.xcodeproj/xcshareddata/xcschemes/macOS-Swift.xcscheme'
      - 'Samples/iOS-ObjectiveC/iOS-ObjectiveC.xcodeproj/xcshareddata/xcschemes/iOS-ObjectiveC.xcscheme'

jobs:
  build-test-server:
    name: Build test server
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Cache for Test Server
        id: cache_test_server
        uses: actions/cache@v3
        with:
          path: ./test-server/.build
          key: test-server-${{ hashFiles('./test-server') }}
          restore-keys: |
            test-server-${{ hashFiles('./test-server') }}
            test-server-

      - name: Build Test Server
        if: steps.cache_test_server.outputs.cache-hit != 'true'
        working-directory: test-server
        run: >-
          swift build -c release 2>&1 | tee test-server-build.log

      - name: Copy exec
        working-directory: test-server
        run: cp $(swift build --show-bin-path -c release)/Run test-server-exec

      - name: Archiving DerivedData
        uses: actions/upload-artifact@v3
        with:
          name: test-server
          path: |
            ./test-server/test-server-exec

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v3
        if: ${{  failure() || cancelled() }}
        with:
          name: test-server-build-log-${{matrix.platform}}-xcode-${{matrix.xcode}}-os-${{matrix.test-destination-os}}
          path: |
            raw-test-output.log

  # macos-11 doesn't have a simulator for iOS 12
  ui-tests-swift-ios-12:
    name: UI Tests on iOS 12 Simulator
    runs-on: macos-11
    strategy:
      matrix:
        target: ['ios_swift', 'ios_objc']

    steps:
      - uses: actions/checkout@v3

      # GH action images don't have an iOS 12.4 simulator. Therefore we have to download and install the simulator manually.
      - name: Install iOS 12.4 simulator
        run: |
          gem install xcode-install
          xcversion simulators --install='iOS 12.4'
          xcrun simctl create custom-test-device "iPhone 8" "com.apple.CoreSimulator.SimRuntime.iOS-12-4"

      # GitHub Actions sometimes fail to launch the UI tests. Therefore we retry
      - name: Run Fastlane
        run: for i in {1..2}; do fastlane ui_tests_${{matrix.target}} device:"iPhone 8 (12.4)" address_sanitizer:false && break ; done
        shell: sh

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v3
        if: ${{  failure() || cancelled() }}
        with:
          name: raw-uitest-output-${{matrix.target}}-ios-12
          path: |
            ~/Library/Logs/scan/*.log
            ./fastlane/test_output/**
